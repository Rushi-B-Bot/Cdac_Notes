 


 insert into student(id,name) values(115,'Pavan Kalyan'); ===only Id Name


SELECT  distinct create_Account_Type FROM rushi.create_account;  ==> distinct Unique data show

 alter table faculty add id int auto_increment primary key not null unique;   ===>Add coloumn
 alter table demo change status info varchar(255) not null; ==>change column name
 alter table student modify column grade varchar(40);  ==>change column type
 alter TABLE demo RENAME to rushi;  ====>change table name
 alter table student drop column email;  ===>drop cloumn


 DELETE FROM contacts WHERE id = 1;    ==>Single record
  delete   from sham :==>All rows
  TRUNCATE TABLE customer; ==>Delete all record;

update sham set name="pushapk" where id=1;;==>Update 1 Record 
update emp set salary = salary + 50.0 where gender='female';


select id, max(salary),min(salary) from faculty group by id;   ==>group by  


    SELECT * 
    FROM customers  
    LEFT JOIN 
    orders
    ON customers.customer_id = orders.customer_id;      ==>LEFT JOIN





 create view empview1 as select * from emp;  ===>create View
 select * from  empview1 ;


 create view empview3 as select ename,esal from emp where esal<=6000;  ====>create View
 insert into empview3 values('Lilli',4500);==>insert Data


select  * from personal where Cource between 1 and 2;  ==>between 

select  * from personal where Cource not between 1 and 2;  ==>between  Not

select  * from personal where  age between 19 and 25 order by age Asc,Cource Desc; ===>Ascending

select  * from personal  where Cource in(1,2);==> Multiple Condtion is provide for same column



 starts  ------> like 'a%'
 ends ' --------> like '%a'
 find any postion 'a' -----------> like '%a%'


 select Stu_name ,Count(Cource) as Count from personal group by Stu_name;   ===>Group  by

SELECT COUNT(CustomerID), Country
FROM Customers
GROUP BY Country                                                       ===>Group  by having

HAVING COUNT(CustomerID) > 5
ORDER BY COUNT(CustomerID) DESC;



select  Extract(month from column name)  from table_name  ====>date extract;


CREATE TEMPORARY TABLE temp_emp
       SELECT o.officecode, o.city, e.firstname, e.email              ===>TEMPORARY TABLE
        FROM offices o
        INNER JOIN Employees e ON e.officecode = o.officecode
        ORDER BY o.officecode;



DELIMITER $$
CREATE PROCEDURE IF NOT EXISTS insertData()     ===> show waring not exist so    
BEGIN      
SELECT * FROM sham 	                 ====>Store Producers  
ORDER BY id Desc; 
END$$

call  insertData();


foreign key (City)  references city(cid);   ===> Foreign  key add 

 select * from stu inner join city1 on stu.City(foreign-1t)=city1.id(primary-2t) where stu.Cityname="Pune" order by stu.name;  ======>INNER JOIN 
 select * from table1(left table) left join table2(right table) on stu.City(foreign-1t)=city1.id(primary-2t) where stu.Cityname="Pune" order by stu.name;  ======>left JOIN 
select * from table1(left table)  left join table2(right table) on lefttable.id=righttable.id where righttable.id is null   ==========> {only left table values}



CREATE INDEX [index_name] ON table_name(column names)  ====>Index create


select sum(if(product_name='phone',amount,0)) as 'Phone Sales' from sales1 limit 10;   ===>expression



delimiter ##
CREATE PROCEDURE exceptionEx0003()
BEGIN
        DECLARE exit HANDLER for 1146
        BEGIN
            select 'Check your table name...';  
   			                     			    //Expection
  								 
        END;
        select 'pro exe started...';
        select * from empp; 					  ==>Query
        select 'pro exe ended.....'; 
END ##
delimiter ;

delimiter @@
CREATE PROCEDURE myloop()
BEGIN
    declare i int default 1;
    Leave Loop: repeat
        select i;
        set i = i + 2;
    until i>=10
    end repeat LL;
END@@
delimiter ;
 call myloop();

DELIMITER $$

CREATE PROCEDURE GetCustomerLevel12(
    IN  customerNo INT,  
    OUT customerLevel VARCHAR(20)
)
BEGIN
	DECLARE credit DEC(10,2) DEFAULT 0;
    
    -- get credit limit of a customer
    SELECT 
		creditLimit 
	INTO credit
    FROM customer    WHERE 
		custno = customerNo;
    
    -- call the function 
    SET customerLevel = CustomerLevel11(credit);
END$$

DELIMITER ;
CALL GetCustomerLevel12(1,@customerLevel);
SELECT @customerLevel;

DELIMITER $$
CREATE PROCEDURE RepeatDemo1()
BEGIN
    DECLARE counter INT DEFAULT 1;
    DECLARE result VARCHAR(100) DEFAULT '';
    
    REPEAT
        SET result = CONCAT(result,counter,',');
        SET counter = counter + 1;
    UNTIL counter >= 10
    END REPEAT;
    
    -- display result
    SELECT result;
END$$

DELIMITER ;


CREATE  FUNCTION maxOfTwo(n1 int,n2 int) 
RETURNS int
BEGIN
        if n1>n2 then
            return n1;
        else    
            return n2;
        end if;
END

mysql> select maxOfTwo(10,20);


DELIMITER $$

CREATE PROCEDURE get_order_by_cust00(
	IN order_id INT,
	OUT shipped INT,
	OUT canceled INT
	)
BEGIN
		-- shipped
		SELECT
            count(*) INTO shipped FROM  orders   WHEREorderid=order_id   AND status = 'Shipped';
		-- canceled
		SELECT
            count(*) INTO canceled
        FROM
          orders
        WHERE
         orderid=order_id       AND status = 'Cancelled';
		
END $$

delimiter ;
CALL get_order_by_cust00(1,@shipped,@canceled);
SELECT @shipped,@canceled;




MYSQL DATE & TIME FUNCTIONS:
----------------------------
mysql> select curdate();// PRINT CURRENT DATE

mysql> select curtime();//CURRENT TIME

mysql> select now();//CURRENT DATE AND TIME 

mysql> select date_add(now(),INTERVAL 1 DAY);

mysql> select date_add(now(),INTERVAL 1 MONTH);

mysql> select date_add(now(),INTERVAL 1 YEAR);

mysql> select date_add(now(),INTERVAL 1 SECOND);

mysql> select date_add(now(),INTERVAL 1 MINUTE);

mysql> select date_add(now(),INTERVAL 1 HOUR);

mysql> select date_sub(now(),INTERVAL 1 SECOND);

mysql> select date_sub(now(),INTERVAL 1 minute);

mysql> select date_sub(now(),INTERVAL 1 hour);

mysql> select date_sub(now(),INTERVAL 1 day);

mysql> select date_sub(now(),INTERVAL 1 month);

mysql> select date_sub(now(),INTERVAL 1 year);

mysql> select date(now());

mysql> select time(now());

mysql> select second(now());

mysql> select minute(now());

mysql> select hour(now());

mysql> select day(now());

mysql> select month(now());

mysql> select year(now());


mysql> select length('IET CDAC');
mysql> select right('welcome',2);
mysql> select length('abc');
mysql> select left('welcome',2);
mysql> select lower('PRAKASH');
mysql> select upper('prakash');
mysql> select replace('abcaba','a','u');
mysql> select repeat('abc',4);
mysql> select reverse('prakash');
mysql> select replace('abcaba','a','u');
mysql> select substring('welcome',4);
mysql> select repeat('abc',4);
 SELECT TRIM('    MYSQL Tutorial    ') AS TrimmedString;
