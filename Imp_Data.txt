//Delegate

namespace Assignment1
{
    public delegate void mydelegates();
    internal class Program
    {
        static void Main(string[] args)
      
        {
            String choice;
            do
            {
                pdf x1 = new pdf();
                mydelegates d1 = new mydelegates(x1.parse);
                mydelegates d2 = new mydelegates(x1.validate);
                mydelegates d3 = new mydelegates(x1.save);
                mydelegates d4 = new mydelegates(x1.revalidate);
                //coupling between events and delegates

                x1.e1 += d1;
                x1.e1 += d2;
                x1.e1 += d3;

                Console.WriteLine("\nDo you want to add special functionality y/n");
                char ch = Convert.ToChar(Console.ReadLine());
                if (ch == 'y')
                {
                    x1.e1 += d4;
                }
                x1.call(); //  calling event e1
                Console.WriteLine("\nDo you want to continue ? ");
                choice = Console.ReadLine();
            }
            while (choice == "y");
        }
        
        public class pdf
        {
            public event mydelegates e1;
            public void parse()
            {
                Console.WriteLine("pdf parsed");
            }
            public void validate()
            {
                Console.WriteLine("pdf validated");
            }
            public void revalidate()
            {
                Console.WriteLine("pdf revalidated");
            }
            public void save()
            {
                Console.WriteLine("pdf saved");
            }
            public void call()
            {
                e1();
            }
        }

    }
}




//Employee database


namespace Assignment_Collection
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //Console.WriteLine("Hello, World!");
            Emp[] emp = new Emp[3];
            for (int i = 0; i < emp.Length; i++)
            {
                Emp e1 = new Emp();
                Console.WriteLine("Enter id");
                e1.EmpId = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Enter name");
                e1.EmpName = Console.ReadLine();
                Console.WriteLine("Enter address");
                e1.EmpAddress = Console.ReadLine();
                emp[i] = e1;
            }
            Console.WriteLine("Enter the position of record you want");
            int pos = Convert.ToInt32(Console.ReadLine());
            //printing record
            foreach (Emp e in emp)
            {
                if (e.EmpId == emp[pos - 1].EmpId)
                {
                    Console.WriteLine("Second record");
                    Console.WriteLine(e.EmpId + "   " + e.EmpName + "   " + e.EmpAddress);
                    break;
                }
            }
            //updating name
            Console.WriteLine("Enter the position name you want to update");
            int index = Convert.ToInt32(Console.ReadLine());
            foreach (Emp e in emp)
            {

                if (e.EmpId == emp[index - 1].EmpId)
                {
                    Console.WriteLine("Enter updated name");
                    String s = Console.ReadLine();
                    e.EmpAddress = s;
                }


            }
            foreach (Emp e in emp)
            {
                Console.WriteLine(e.EmpId + "  " + e.EmpName + "  " + e.EmpAddress);
            }



        }

    }
    public class Emp
    {
        int empId;
        string empName;
        string empAddress;

        public int EmpId { get => empId; set => empId = value; }
        public string EmpName { get => empName; set => empName = value; }
        public string EmpAddress { get => empAddress; set => empAddress = value; }
    } 
      
}
